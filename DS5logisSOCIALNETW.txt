# Experiment 5: Logistic Regression on Social_Network_Ads.csv
# Aim: Implement Logistic Regression and compute confusion matrix, TP, FP, TN, FN, accuracy, etc.

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import confusion_matrix, classification_report, accuracy_score

# Step 1: Load the dataset
df = pd.read_csv("Social_Network_Ads.csv")  # Replace with actual path if stored locally
print(df.head())

# Step 2: Select relevant features and target
X = df[['Age', 'EstimatedSalary']]
y = df['Purchased']

# Step 3: Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)

# Step 4: Create logistic regression model and fit it
model = LogisticRegression()
model.fit(X_train, y_train)

# Step 5: Make predictions
y_pred = model.predict(X_test)

# Step 6: Evaluate performance
conf_matrix = confusion_matrix(y_test, y_pred)
acc = accuracy_score(y_test, y_pred)

print("Confusion Matrix:\n", conf_matrix)
print("\nClassification Report:\n", classification_report(y_test, y_pred))
print("Accuracy:", acc)

# Q: What is Logistic Regression?
# A: It’s a classification algorithm used to predict binary outcomes (0 or 1).

# Q: What is the difference between Linear and Logistic Regression?
# A: Linear is for continuous output, Logistic is for categorical output.

# Q: What does the confusion matrix show?
# A: TP, FP, TN, FN – helps evaluate classification performance.

# Q: Why use train_test_split?
# A: To train the model on one set and test on another to evaluate generalization.

# Q: What is the output of sigmoid function?
# A: A probability between 0 and 1.
